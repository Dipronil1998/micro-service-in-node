import {Application} from '../src/BaseApplication/Application';
import {ErrorHandlerMiddleware} from '../src/middleware/ErrorHandlerMiddleware';
import {PageNotFoundMiddleware} from '../src/middleware/PageNotFoundMiddleware';
import bodyParser from 'body-parser';
import useragent from 'express-useragent';
import {UserAuthenticationRoute} from '../src/routes/UserAuthenticationRoute';
import {UserLoginLogRoute} from '../src/routes/UserLoginLogRoute';
import cookieParser from 'cookie-parser';
import {DeviceRoute} from '../src/routes/DeviceRoute';
import {PlatformRoute} from '../src/routes/PlatformRoute';
import cors from 'cors';
import {AccessRoleRoute} from '../src/routes/AccessRoleRoute';
import {AdminAuthenticationRoute} from '../src/routes/AdminAuthenticationRoute';
import {TwoFactorAuthRoute} from '../src/routes/TwoFactorAuthRoute';
import {AdminLoginLogRoute} from '../src/routes/AdminLoginLogRoute';
import {AdminNoteRoute} from '../src/routes/AdminNoteRoute';
export const app : Application = new Application();
app.middleware(cors());
app.middleware(useragent.express());
app.middleware(cookieParser());
app.middlewares([bodyParser.urlencoded({extended: false}), bodyParser.json()]);
app.routes([new AdminLoginLogRoute('/auth/admin/info')]);
app.routes([new UserAuthenticationRoute('/auth/user')]);
app.routes([new AdminAuthenticationRoute('/auth/admin')]);
app.routes([new AdminNoteRoute('/auth/note/admin')]);
app.routes([new DeviceRoute('/auth/device')]);
app.routes([new UserLoginLogRoute('/auth/info')]);
app.routes([new PlatformRoute('/auth/platform')]);
app.routes([new AccessRoleRoute('/auth/role')]);
app.routes([new TwoFactorAuthRoute('/auth/2fa')]);
app.use(new PageNotFoundMiddleware().pageNotFound);
app.use(new ErrorHandlerMiddleware().errorHandler);
